% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spex-package.r, R/spex.R
\docType{package}
\name{spex}
\alias{spex}
\alias{spex-package}
\alias{spex.Extent}
\alias{spex.default}
\title{spex}
\usage{
spex(x, ...)

\method{spex}{default}(x, byid = FALSE, .id, ...)

\method{spex}{Extent}(x, crs, ...)
}
\arguments{
\item{x}{any object with a \code{\link[raster]{Extent}}}

\item{...}{arguments for methods}

\item{byid}{return a separate object for every input sub-object (not yet implemented)}

\item{.id}{optional name for output attribute name}

\item{crs}{a projection string}
}
\value{
'SpatialPolygonsDataFrame'
}
\description{
spex

Create Spatial Polygons with projection metadata from a 'Spatial Extent'.
}
\details{
This function is to replace a common pattern in the 'sp'-'raster' family which is
\itemize{
\item create an \code{\link[raster]{Extent}}, a bounding box in xmin,xmax,ymin,ymax but without projection metadata
\item coerce the Extent to \code{\link[sp]{SpatialPolygons}}
\item restore the 'CRS', the "coordinate reference system", i.e. projection metadata
\item elevate the object to be a \code{\link[sp]{SpatialPolygonsDataFrame}}.
}

In short, this pattern exists because there is no projection metadata stored
 with either sp''s \code{\link[sp]{bbox}} or 'raster''s \code{\link[raster]{Extent}}.
}
\section{Spatial Extent}{

\tabular{ll}{
 \code{\link{spex}} \tab function to produce a fully fledged Spatial object extent \cr
}
}

\section{Warning}{
 Please note that an extent converted to polygons consists
of only four unique coordinates, and so this is not necessarily suited for
projection transformations.
}

\section{Potentially Unwelcome Rant}{

Consider also that this is a common limitation, outside of R, where the "OGC
standard" for serialized geometry in "well known text" (WKT) or "well known
binary" (WKB) do not include projection metadata.   Some GIS systems do
provide serialized geometries that include this crucial metadata, and may we
encourage this to become more common. Not only is "longitude / latitude"
coordinates not always suitable, they are actually meaningless without
knowing the _datum_ (the ellipsoid radii and orientation, often WGS84) and
the units in use (usually 'degrees', but sometimes 'radians')
}
\examples{
library(raster)
data(lux)
exlux <- spex(lux)

plot(lux)
plot(exlux, add = TRUE)

## put an extent and a CRS together
spex(extent(0, 1, 0, 1), crs = "+proj=laea +ellps=WGS84")
\dontrun{
 ## library(rgdal)
 ## p4 <- "+proj=laea +ellps=WGS84"
 ## plot(spTransform(lux, p4))
 ## warning, this is just 4 coordinates
 ## plot(spTransform(exlux, p4), add = TRUE)
}
}
\seealso{
This pattern is displayed in the example code for \code{\link[raster]{cover}}.
}

